import {
  useTheme
} from "./chunk-FT445BB5.js";
import {
  breadcrumbLinkTheme,
  breadcrumbSeparatorTheme,
  breadcrumbTheme
} from "./chunk-FOAJJTIZ.js";

// src/components/breadcrumb.tsx
import * as React from "react";
import { twMerge } from "tailwind-merge";
import { jsx } from "react/jsx-runtime";
function BreadcrumbRootBase({ as, className, children, ...props }, ref) {
  const Component = as || "nav";
  const contextTheme = useTheme();
  const theme = contextTheme.breadcrumb || breadcrumbTheme;
  const styles = twMerge(theme.baseStyle, className);
  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children });
}
BreadcrumbRootBase.displayName = "MaterialTailwind.Breadcrumb";
var BreadcrumbRoot = React.forwardRef(BreadcrumbRootBase);
function BreadcrumbLinkRoot({ as, className, children, ...props }, ref) {
  const Component = as || "a";
  const contextTheme = useTheme();
  const theme = contextTheme.breadcrumbLink || breadcrumbLinkTheme;
  const styles = twMerge(theme.baseStyle, className);
  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children });
}
BreadcrumbLinkRoot.displayName = "MaterialTailwind.BreadcrumbLink";
var BreadcrumbLink = React.forwardRef(BreadcrumbLinkRoot);
function BreadcrumbSeparatorRoot({ as, className, children, ...props }, ref) {
  const Component = as || "span";
  const contextTheme = useTheme();
  const theme = contextTheme.breadcrumbSeparator || breadcrumbSeparatorTheme;
  const styles = twMerge(theme.baseStyle, className);
  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children: children || "/" });
}
BreadcrumbSeparatorRoot.displayName = "MaterialTailwind.BreadcrumbSeparator";
var BreadcrumbSeparator = React.forwardRef(
  BreadcrumbSeparatorRoot
);
var Breadcrumb = Object.assign(BreadcrumbRoot, {
  Link: BreadcrumbLink,
  Separator: BreadcrumbSeparator
});
var breadcrumb_default = Breadcrumb;

export {
  BreadcrumbRoot,
  BreadcrumbLink,
  BreadcrumbSeparator,
  Breadcrumb,
  breadcrumb_default
};
