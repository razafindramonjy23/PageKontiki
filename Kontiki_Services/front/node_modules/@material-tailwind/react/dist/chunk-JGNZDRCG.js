import {
  useTheme
} from "./chunk-FT445BB5.js";
import {
  cardBodyTheme,
  cardFooterTheme,
  cardHeaderTheme,
  cardTheme
} from "./chunk-ELQB6BWL.js";

// src/components/card.tsx
import * as React from "react";
import { twMerge } from "tailwind-merge";
import { jsx } from "react/jsx-runtime";
function CardRootBase({ as, color, variant, className, children, ...props }, ref) {
  const Component = as || "div";
  const contextTheme = useTheme();
  const theme = contextTheme.card || cardTheme;
  const defaultProps = theme.defaultProps;
  color ??= defaultProps?.color ?? "default";
  variant ??= defaultProps?.variant ?? "solid";
  const styles = twMerge(
    theme.baseStyle,
    theme.variant[variant][color],
    className
  );
  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children });
}
CardRootBase.displayName = "MaterialTailwind.Card";
var CardRoot = React.forwardRef(CardRootBase);
function CardHeaderRoot({ as, className, children, ...props }, ref) {
  const Component = as || "div";
  const contextTheme = useTheme();
  const theme = contextTheme.cardHeader || cardHeaderTheme;
  const styles = twMerge(theme.baseStyle, className);
  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children });
}
CardHeaderRoot.displayName = "MaterialTailwind.CardHeader";
var CardHeader = React.forwardRef(CardHeaderRoot);
function CardBodyRoot({ as, className, children, ...props }, ref) {
  const Component = as || "div";
  const contextTheme = useTheme();
  const theme = contextTheme.cardBody || cardBodyTheme;
  const styles = twMerge(theme.baseStyle, className);
  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children });
}
CardBodyRoot.displayName = "MaterialTailwind.CardBody";
var CardBody = React.forwardRef(CardBodyRoot);
function CardFooterRoot({ as, className, children, ...props }, ref) {
  const Component = as || "div";
  const contextTheme = useTheme();
  const theme = contextTheme.cardFooter || cardFooterTheme;
  const styles = twMerge(theme.baseStyle, className);
  return /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children });
}
CardFooterRoot.displayName = "MaterialTailwind.CardFooter";
var CardFooter = React.forwardRef(CardFooterRoot);
var Card = Object.assign(CardRoot, {
  Header: CardHeader,
  Body: CardBody,
  Footer: CardFooter
});
var card_default = Card;

export {
  CardRoot,
  CardHeader,
  CardBody,
  CardFooter,
  Card,
  card_default
};
