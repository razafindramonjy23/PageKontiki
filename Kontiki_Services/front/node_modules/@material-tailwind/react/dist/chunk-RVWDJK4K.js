import {
  useTheme
} from "./chunk-FT445BB5.js";
import {
  progressBarTheme,
  progressTheme
} from "./chunk-U44YIC2J.js";

// src/components/progress.tsx
import * as React from "react";
import { twMerge } from "tailwind-merge";
import { jsx } from "react/jsx-runtime";
var ProgressContext = React.createContext({
  value: 0,
  color: "primary"
});
function ProgressRootBase({ as, size, color, value, className, children, ...props }, ref) {
  const Component = as ?? "div";
  const contextTheme = useTheme();
  const theme = contextTheme.progress ?? progressTheme;
  const defaultProps = theme?.defaultProps;
  size ??= defaultProps?.size ?? "md";
  color ??= defaultProps?.color ?? "primary";
  const styles = twMerge(theme.baseStyle, theme.size[size], className);
  const contextValue = React.useMemo(() => ({ value, color }), [value, color]);
  return /* @__PURE__ */ jsx(ProgressContext.Provider, { value: contextValue, children: /* @__PURE__ */ jsx(Component, { ...props, ref, className: styles, children }) });
}
ProgressRootBase.displayName = "MaterialTailwind.Progress";
var ProgressRoot = React.forwardRef(ProgressRootBase);
function ProgressBarRoot({ as, className, children, ...props }, ref) {
  const Component = as ?? "div";
  const contextTheme = useTheme();
  const { color, value } = React.useContext(ProgressContext);
  const theme = contextTheme.progressBar ?? progressBarTheme;
  const styles = twMerge(
    theme.baseStyle,
    theme.color[color],
    className
  );
  return /* @__PURE__ */ jsx(
    Component,
    {
      ...props,
      ref,
      className: styles,
      style: {
        width: `${value}%`,
        ...props?.style
      },
      children
    }
  );
}
ProgressBarRoot.displayName = "MaterialTailwind.ProgressBar";
var ProgressBar = React.forwardRef(ProgressBarRoot);
var Progress = Object.assign(ProgressRoot, {
  Bar: ProgressBar
});
var progress_default = Progress;

export {
  ProgressContext,
  ProgressRoot,
  ProgressBar,
  Progress,
  progress_default
};
