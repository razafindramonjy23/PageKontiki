{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { RangerConfig, RangerOptions, Ranger } from '@tanstack/ranger'\n\nexport * from '@tanstack/ranger'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useRanger<TTrackElement>(\n  options: RangerOptions<TTrackElement>,\n): Ranger<TTrackElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n  const resolvedOptions: RangerConfig<TTrackElement> = {\n    ...options,\n    rerender,\n    onChange: (instance) => {\n      rerender()\n      options.onChange?.(instance)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Ranger<TTrackElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n"],"names":["useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","useRanger","options","rerender","useReducer","resolvedOptions","onChange","instance","useState","Ranger","setOptions","_willUpdate"],"mappings":";;;;;;;;;;;;;;AAKA,MAAMA,yBAAyB,GAC7B,OAAOC,MAAM,KAAK,WAAW,GAAGC,KAAK,CAACC,eAAe,GAAGD,KAAK,CAACE,SAAS,CAAA;AAElE,SAASC,SAAS,CACvBC,OAAqC,EACd;AACvB,EAAA,MAAMC,QAAQ,GAAGL,KAAK,CAACM,UAAU,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;AACpD,EAAA,MAAMC,eAA4C,GAAG;AACnD,IAAA,GAAGH,OAAO;IACVC,QAAQ;IACRG,QAAQ,EAAGC,QAAQ,IAAK;AACtBJ,MAAAA,QAAQ,EAAE,CAAA;AACVD,MAAAA,OAAO,CAACI,QAAQ,GAAGC,QAAQ,CAAC,CAAA;AAC9B,KAAA;GACD,CAAA;AAED,EAAA,MAAM,CAACA,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAC/B,MAAM,IAAIC,MAAM,CAAgBJ,eAAe,CAAC,CACjD,CAAA;AAEDE,EAAAA,QAAQ,CAACG,UAAU,CAACL,eAAe,CAAC,CAAA;AAEpCT,EAAAA,yBAAyB,CAAC,MAAM;IAC9B,OAAOW,QAAQ,CAACI,WAAW,EAAE,CAAA;AAC/B,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOJ,QAAQ,CAAA;AACjB;;;;"}