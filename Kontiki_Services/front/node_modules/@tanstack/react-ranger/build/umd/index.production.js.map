{"version":3,"file":"index.production.js","sources":["../../../ranger/build/esm/index.js","../../src/index.tsx"],"sourcesContent":["/**\n * ranger\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nconst getBoundingClientRect = element => {\n  const rect = element.getBoundingClientRect();\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width)\n  };\n};\nconst sortNumList = arr => [...arr].map(Number).sort((a, b) => a - b);\nconst linearInterpolator = {\n  getPercentageForValue: (val, min, max) => {\n    return Math.max(0, Math.min(100, (val - min) / (max - min) * 100));\n  },\n  getValueForClientX: (clientX, trackDims, min, max) => {\n    const {\n      left,\n      width\n    } = trackDims;\n    const percentageValue = (clientX - left) / width;\n    const value = (max - min) * percentageValue;\n    return value + min;\n  }\n};\n\nclass Ranger {\n  sortedValues = [];\n  rangerElement = null;\n  constructor(opts) {\n    this.setOptions(opts);\n  }\n  setOptions(opts) {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete opts[key];\n    });\n    this.options = {\n      debug: false,\n      tickSize: 10,\n      interpolator: linearInterpolator,\n      onChange: () => {},\n      ...opts\n    };\n  }\n  _willUpdate = () => {\n    const rangerElement = this.options.getRangerElement();\n    if (this.rangerElement !== rangerElement) {\n      this.rangerElement = rangerElement;\n    }\n  };\n  getValueForClientX = clientX => {\n    const trackDims = getBoundingClientRect(this.rangerElement);\n    return this.options.interpolator.getValueForClientX(clientX, trackDims, this.options.min, this.options.max);\n  };\n  getNextStep = (val, direction) => {\n    const {\n      min,\n      max\n    } = this.options;\n    if ('steps' in this.options) {\n      const {\n        steps\n      } = this.options;\n      let currIndex = steps.indexOf(val);\n      let nextIndex = currIndex + direction;\n      if (nextIndex >= 0 && nextIndex < steps.length) {\n        return steps[nextIndex];\n      } else {\n        return val;\n      }\n    } else {\n      let nextVal = val + this.options.stepSize * direction;\n      if (nextVal >= min && nextVal <= max) {\n        return nextVal;\n      } else {\n        return val;\n      }\n    }\n  };\n  roundToStep = val => {\n    const {\n      min,\n      max\n    } = this.options;\n    let left = min;\n    let right = max;\n    if ('steps' in this.options) {\n      this.options.steps.forEach(step => {\n        if (step <= val && step > left) {\n          left = step;\n        }\n        if (step >= val && step < right) {\n          right = step;\n        }\n      });\n    } else {\n      const {\n        stepSize\n      } = this.options;\n      while (left < val && left + stepSize < val) {\n        left += stepSize;\n      }\n      right = Math.min(left + stepSize, max);\n    }\n    if (val - left < right - val) {\n      return left;\n    }\n    return right;\n  };\n  handleDrag = e => {\n    if (this.activeHandleIndex === undefined) {\n      return;\n    }\n    const clientX = e.type === 'touchmove' ? e.changedTouches[0].clientX : e.clientX;\n    const newValue = this.getValueForClientX(clientX);\n    const newRoundedValue = this.roundToStep(newValue);\n    this.sortedValues = [...this.options.values.slice(0, this.activeHandleIndex), newRoundedValue, ...this.options.values.slice(this.activeHandleIndex + 1)];\n    if (this.options.onDrag) {\n      this.options.onDrag(this);\n    } else {\n      this.tempValues = this.sortedValues;\n      this.options.rerender();\n    }\n  };\n  handleKeyDown = (e, i) => {\n    const {\n      values\n    } = this.options;\n\n    // Left Arrow || Right Arrow\n    if (e.keyCode === 37 || e.keyCode === 39) {\n      this.activeHandleIndex = i;\n      const direction = e.keyCode === 37 ? -1 : 1;\n      const newValue = this.getNextStep(values[i], direction);\n      const newValues = [...values.slice(0, i), newValue, ...values.slice(i + 1)];\n      this.sortedValues = sortNumList(newValues);\n      if (this.options.onChange) {\n        this.options.onChange(this);\n      }\n    }\n  };\n  handlePress = (_e, i) => {\n    this.activeHandleIndex = i;\n    this.options.rerender();\n    const handleRelease = () => {\n      const {\n        tempValues,\n        handleDrag\n      } = this;\n      document.removeEventListener('mousemove', handleDrag);\n      document.removeEventListener('touchmove', handleDrag);\n      document.removeEventListener('mouseup', handleRelease);\n      document.removeEventListener('touchend', handleRelease);\n      this.sortedValues = sortNumList(tempValues || this.options.values);\n      if (this.options.onChange) {\n        this.options.onChange(this);\n      }\n      if (this.options.onDrag) {\n        this.options.onDrag(this);\n      }\n      this.activeHandleIndex = undefined;\n      this.tempValues = undefined;\n      this.options.rerender();\n    };\n    const {\n      handleDrag\n    } = this;\n    document.addEventListener('mousemove', handleDrag);\n    document.addEventListener('touchmove', handleDrag);\n    document.addEventListener('mouseup', handleRelease);\n    document.addEventListener('touchend', handleRelease);\n  };\n  getPercentageForValue = val => this.options.interpolator.getPercentageForValue(val, this.options.min, this.options.max);\n  getTicks = () => {\n    let ticks = [];\n    if (this.options.ticks) {\n      ticks = [...this.options.ticks];\n    } else if ('steps' in this.options) {\n      ticks = [...this.options.steps];\n    } else {\n      ticks = [this.options.min];\n      while (ticks[ticks.length - 1] < this.options.max - this.options.tickSize) {\n        ticks.push(ticks[ticks.length - 1] + this.options.tickSize);\n      }\n      ticks.push(this.options.max);\n    }\n    return ticks.map((value, i) => ({\n      value,\n      key: i,\n      percentage: this.getPercentageForValue(value)\n    }));\n  };\n  getSteps = () => {\n    const values = sortNumList(this.tempValues || this.options.values);\n    return [...values, this.options.max].map((value, i) => {\n      const previousValue = values[i - 1];\n      const leftValue = previousValue !== undefined ? previousValue : this.options.min;\n      const left = this.getPercentageForValue(leftValue);\n      const width = this.getPercentageForValue(value) - left;\n      return {\n        left,\n        width\n      };\n    });\n  };\n  handles = () => {\n    return (this.tempValues || this.options.values).map((value, i) => ({\n      value,\n      isActive: i === this.activeHandleIndex,\n      onKeyDownHandler: e => {\n        this.handleKeyDown(e, i);\n      },\n      onMouseDownHandler: e => {\n        this.handlePress(e, i);\n      },\n      onTouchStart: e => {\n        this.handlePress(e, i);\n      }\n    }));\n  };\n}\n\nexport { Ranger };\n//# sourceMappingURL=index.js.map\n","import * as React from 'react'\nimport { RangerConfig, RangerOptions, Ranger } from '@tanstack/ranger'\n\nexport * from '@tanstack/ranger'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useRanger<TTrackElement>(\n  options: RangerOptions<TTrackElement>,\n): Ranger<TTrackElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n  const resolvedOptions: RangerConfig<TTrackElement> = {\n    ...options,\n    rerender,\n    onChange: (instance) => {\n      rerender()\n      options.onChange?.(instance)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Ranger<TTrackElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n"],"names":["sortNumList","arr","map","Number","sort","a","b","linearInterpolator","getPercentageForValue","val","min","max","Math","getValueForClientX","clientX","trackDims","left","width","Ranger","sortedValues","rangerElement","constructor","opts","this","setOptions","Object","entries","forEach","key","value","options","debug","tickSize","interpolator","onChange","_willUpdate","getRangerElement","element","rect","getBoundingClientRect","ceil","getNextStep","direction","steps","nextIndex","indexOf","length","nextVal","stepSize","roundToStep","right","step","handleDrag","e","undefined","activeHandleIndex","type","changedTouches","newValue","newRoundedValue","values","slice","onDrag","tempValues","rerender","handleKeyDown","i","keyCode","newValues","handlePress","_e","handleRelease","document","removeEventListener","addEventListener","getTicks","ticks","push","percentage","getSteps","previousValue","leftValue","handles","isActive","onKeyDownHandler","onMouseDownHandler","onTouchStart","useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","useReducer","resolvedOptions","instance","useState"],"mappings":"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"}