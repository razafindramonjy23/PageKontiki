/**
 * ranger
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const getBoundingClientRect = element => {
  const rect = element.getBoundingClientRect();
  return {
    left: Math.ceil(rect.left),
    width: Math.ceil(rect.width)
  };
};
const sortNumList = arr => [...arr].map(Number).sort((a, b) => a - b);
const linearInterpolator = {
  getPercentageForValue: (val, min, max) => {
    return Math.max(0, Math.min(100, (val - min) / (max - min) * 100));
  },
  getValueForClientX: (clientX, trackDims, min, max) => {
    const {
      left,
      width
    } = trackDims;
    const percentageValue = (clientX - left) / width;
    const value = (max - min) * percentageValue;
    return value + min;
  }
};

exports.getBoundingClientRect = getBoundingClientRect;
exports.linearInterpolator = linearInterpolator;
exports.sortNumList = sortNumList;
//# sourceMappingURL=utils.js.map
