{"version":3,"file":"index.js","sources":["../../src/utils.ts","../../src/index.ts"],"sourcesContent":["export const getBoundingClientRect = (element: any) => {\n  const rect = element.getBoundingClientRect()\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n  }\n}\n\nexport const sortNumList = (arr: ReadonlyArray<number | string>) =>\n  [...arr].map(Number).sort((a, b) => a - b)\n\nexport const linearInterpolator = {\n  getPercentageForValue: (val: number, min: number, max: number) => {\n    return Math.max(0, Math.min(100, ((val - min) / (max - min)) * 100))\n  },\n  getValueForClientX: (\n    clientX: number,\n    trackDims: { width: number; left: number },\n    min: number,\n    max: number,\n  ) => {\n    const { left, width } = trackDims\n    const percentageValue = (clientX - left) / width\n    const value = (max - min) * percentageValue\n    return value + min\n  },\n}\n","import { linearInterpolator, getBoundingClientRect, sortNumList } from './utils'\n\nexport type RangerChangeEvent<TTrackElement> = (\n  instance: Ranger<TTrackElement>,\n) => void\n\nexport type RangerInterpolator = {\n  getPercentageForValue: (val: number, min: number, max: number) => number\n  getValueForClientX: (\n    clientX: number,\n    trackDims: { width: number; left: number },\n    min: number,\n    max: number,\n  ) => number\n}\n\nexport type RangerClassConfig<TTrackElement = unknown> = {\n  getRangerElement: () => TTrackElement | null\n  values: ReadonlyArray<number>\n\n  min: number\n  max: number\n\n  tickSize: number\n  ticks?: ReadonlyArray<number>\n\n  interpolator: RangerInterpolator\n  onChange: RangerChangeEvent<TTrackElement>\n  onDrag?: RangerChangeEvent<TTrackElement>\n\n  rerender: () => void\n  debug: boolean\n} & ({ stepSize: number } | { steps: ReadonlyArray<number> })\n\nexport type RangerConfig<TTrackElement = unknown> = Omit<\n  RangerClassConfig<TTrackElement>,\n  'tickSize' | 'interpolator' | 'onChange' | 'debug'\n> & {\n  tickSize?: number\n  interpolator?: RangerInterpolator\n  onChange?: RangerChangeEvent<TTrackElement>\n  debug?: boolean\n} & ({ stepSize: number } | { steps: ReadonlyArray<number> })\n\nexport type RangerOptions<TTrackElement = unknown> = Omit<\n  RangerConfig<TTrackElement>,\n  'rerender'\n> &\n  ({ stepSize: number } | { steps: ReadonlyArray<number> })\n\nexport class Ranger<TTrackElement = unknown> {\n  activeHandleIndex: number | undefined\n  tempValues: ReadonlyArray<number> | undefined\n  sortedValues: ReadonlyArray<number> = []\n\n  options!: RangerClassConfig<TTrackElement>\n\n  private rangerElement: TTrackElement | null = null\n\n  constructor(opts: RangerConfig<TTrackElement>) {\n    this.setOptions(opts)\n  }\n\n  setOptions(opts: RangerConfig<TTrackElement>) {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      tickSize: 10,\n      interpolator: linearInterpolator,\n      onChange: () => {},\n      ...opts,\n    }\n  }\n\n  _willUpdate = () => {\n    const rangerElement = this.options.getRangerElement()\n\n    if (this.rangerElement !== rangerElement) {\n      this.rangerElement = rangerElement\n    }\n  }\n\n  getValueForClientX = (clientX: number) => {\n    const trackDims = getBoundingClientRect(this.rangerElement)\n    return this.options.interpolator.getValueForClientX(\n      clientX,\n      trackDims,\n      this.options.min,\n      this.options.max,\n    )\n  }\n\n  getNextStep = (val: number, direction: number): number => {\n    const { min, max } = this.options\n\n    if ('steps' in this.options) {\n      const { steps } = this.options\n      let currIndex = steps.indexOf(val)\n      let nextIndex = currIndex + direction\n      if (nextIndex >= 0 && nextIndex < steps.length) {\n        return steps[nextIndex] as number\n      } else {\n        return val\n      }\n    } else {\n      let nextVal = val + this.options.stepSize * direction\n      if (nextVal >= min && nextVal <= max) {\n        return nextVal\n      } else {\n        return val\n      }\n    }\n  }\n\n  roundToStep = (val: number) => {\n    const { min, max } = this.options\n\n    let left = min\n    let right = max\n    if ('steps' in this.options) {\n      this.options.steps.forEach((step) => {\n        if (step <= val && step > left) {\n          left = step\n        }\n        if (step >= val && step < right) {\n          right = step\n        }\n      })\n    } else {\n      const { stepSize } = this.options\n      while (left < val && left + stepSize < val) {\n        left += stepSize\n      }\n\n      right = Math.min(left + stepSize, max)\n    }\n\n    if (val - left < right - val) {\n      return left\n    }\n    return right\n  }\n\n  handleDrag = (e: any) => {\n    if (this.activeHandleIndex === undefined) {\n      return\n    }\n\n    const clientX =\n      e.type === 'touchmove' ? e.changedTouches[0].clientX : e.clientX\n    const newValue = this.getValueForClientX(clientX)\n    const newRoundedValue = this.roundToStep(newValue)\n\n    this.sortedValues = [\n      ...this.options.values.slice(0, this.activeHandleIndex),\n      newRoundedValue,\n      ...this.options.values.slice(this.activeHandleIndex + 1),\n    ]\n\n    if (this.options.onDrag) {\n      this.options.onDrag(this)\n    } else {\n      this.tempValues = this.sortedValues\n      this.options.rerender()\n    }\n  }\n\n  handleKeyDown = (e: KeyboardEvent, i: number) => {\n    const { values } = this.options\n\n    // Left Arrow || Right Arrow\n    if (e.keyCode === 37 || e.keyCode === 39) {\n      this.activeHandleIndex = i\n      const direction = e.keyCode === 37 ? -1 : 1\n      const newValue = this.getNextStep(values[i] as number, direction)\n      const newValues = [\n        ...values.slice(0, i),\n        newValue,\n        ...values.slice(i + 1),\n      ]\n      this.sortedValues = sortNumList(newValues)\n      if (this.options.onChange) {\n        this.options.onChange(this)\n      }\n    }\n  }\n\n  handlePress = (_e: any, i: number) => {\n    this.activeHandleIndex = i\n    this.options.rerender()\n\n    const handleRelease = () => {\n      const { tempValues, handleDrag } = this\n\n      document.removeEventListener('mousemove', handleDrag)\n      document.removeEventListener('touchmove', handleDrag)\n      document.removeEventListener('mouseup', handleRelease)\n      document.removeEventListener('touchend', handleRelease)\n      this.sortedValues = sortNumList(tempValues || this.options.values)\n      if (this.options.onChange) {\n        this.options.onChange(this)\n      }\n      if (this.options.onDrag) {\n        this.options.onDrag(this)\n      }\n      this.activeHandleIndex = undefined\n      this.tempValues = undefined\n      this.options.rerender()\n    }\n    const { handleDrag } = this\n    document.addEventListener('mousemove', handleDrag)\n    document.addEventListener('touchmove', handleDrag)\n    document.addEventListener('mouseup', handleRelease)\n    document.addEventListener('touchend', handleRelease)\n  }\n\n  getPercentageForValue = (val: number) =>\n    this.options.interpolator.getPercentageForValue(\n      val,\n      this.options.min,\n      this.options.max,\n    )\n\n  getTicks = () => {\n    let ticks: Array<number> = []\n    if (this.options.ticks) {\n      ticks = [...this.options.ticks]\n    } else if ('steps' in this.options) {\n      ticks = [...this.options.steps]\n    } else {\n      ticks = [this.options.min]\n      while (\n        (ticks[ticks.length - 1] as number) <\n        this.options.max - this.options.tickSize\n      ) {\n        ticks.push((ticks[ticks.length - 1] as number) + this.options.tickSize)\n      }\n      ticks.push(this.options.max)\n    }\n\n    return ticks.map((value, i) => ({\n      value,\n      key: i,\n      percentage: this.getPercentageForValue(value),\n    }))\n  }\n\n  getSteps = () => {\n    const values = sortNumList(this.tempValues || this.options.values)\n\n    return [...values, this.options.max].map((value, i) => {\n      const previousValue = values[i - 1]\n      const leftValue =\n        previousValue !== undefined ? previousValue : this.options.min\n      const left = this.getPercentageForValue(leftValue)\n      const width = this.getPercentageForValue(value) - left\n      return {\n        left,\n        width,\n      }\n    })\n  }\n\n  handles = () => {\n    return (this.tempValues || this.options.values).map((value, i) => ({\n      value,\n      isActive: i === this.activeHandleIndex,\n      onKeyDownHandler: (e: any) => {\n        this.handleKeyDown(e, i)\n      },\n      onMouseDownHandler: (e: any) => {\n        this.handlePress(e, i)\n      },\n      onTouchStart: (e: any) => {\n        this.handlePress(e, i)\n      },\n    }))\n  }\n}\n"],"names":["getBoundingClientRect","element","rect","left","Math","ceil","width","sortNumList","arr","map","Number","sort","a","b","linearInterpolator","getPercentageForValue","val","min","max","getValueForClientX","clientX","trackDims","percentageValue","value","Ranger","sortedValues","rangerElement","constructor","opts","setOptions","Object","entries","forEach","key","options","debug","tickSize","interpolator","onChange","_willUpdate","getRangerElement","getNextStep","direction","steps","currIndex","indexOf","nextIndex","length","nextVal","stepSize","roundToStep","right","step","handleDrag","e","activeHandleIndex","undefined","type","changedTouches","newValue","newRoundedValue","values","slice","onDrag","tempValues","rerender","handleKeyDown","i","keyCode","newValues","handlePress","_e","handleRelease","document","removeEventListener","addEventListener","getTicks","ticks","push","percentage","getSteps","previousValue","leftValue","handles","isActive","onKeyDownHandler","onMouseDownHandler","onTouchStart"],"mappings":"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"}