/**
 * ranger
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Ranger={})}(this,(function(e){"use strict";const t=e=>[...e].map(Number).sort(((e,t)=>e-t)),s={getPercentageForValue:(e,t,s)=>Math.max(0,Math.min(100,(e-t)/(s-t)*100)),getValueForClientX:(e,t,s,n)=>{const{left:i,width:o}=t;return(n-s)*((e-i)/o)+s}};e.Ranger=class{sortedValues=[];rangerElement=null;constructor(e){this.setOptions(e)}setOptions(e){Object.entries(e).forEach((([t,s])=>{void 0===s&&delete e[t]})),this.options={debug:!1,tickSize:10,interpolator:s,onChange:()=>{},...e}}_willUpdate=()=>{const e=this.options.getRangerElement();this.rangerElement!==e&&(this.rangerElement=e)};getValueForClientX=e=>{const t=(e=>{const t=e.getBoundingClientRect();return{left:Math.ceil(t.left),width:Math.ceil(t.width)}})(this.rangerElement);return this.options.interpolator.getValueForClientX(e,t,this.options.min,this.options.max)};getNextStep=(e,t)=>{const{min:s,max:n}=this.options;if("steps"in this.options){const{steps:s}=this.options;let n=s.indexOf(e)+t;return n>=0&&n<s.length?s[n]:e}{let i=e+this.options.stepSize*t;return i>=s&&i<=n?i:e}};roundToStep=e=>{const{min:t,max:s}=this.options;let n=t,i=s;if("steps"in this.options)this.options.steps.forEach((t=>{t<=e&&t>n&&(n=t),t>=e&&t<i&&(i=t)}));else{const{stepSize:t}=this.options;for(;n<e&&n+t<e;)n+=t;i=Math.min(n+t,s)}return e-n<i-e?n:i};handleDrag=e=>{if(void 0===this.activeHandleIndex)return;const t="touchmove"===e.type?e.changedTouches[0].clientX:e.clientX,s=this.getValueForClientX(t),n=this.roundToStep(s);this.sortedValues=[...this.options.values.slice(0,this.activeHandleIndex),n,...this.options.values.slice(this.activeHandleIndex+1)],this.options.onDrag?this.options.onDrag(this):(this.tempValues=this.sortedValues,this.options.rerender())};handleKeyDown=(e,s)=>{const{values:n}=this.options;if(37===e.keyCode||39===e.keyCode){this.activeHandleIndex=s;const i=37===e.keyCode?-1:1,o=this.getNextStep(n[s],i),h=[...n.slice(0,s),o,...n.slice(s+1)];this.sortedValues=t(h),this.options.onChange&&this.options.onChange(this)}};handlePress=(e,s)=>{this.activeHandleIndex=s,this.options.rerender();const n=()=>{const{tempValues:e,handleDrag:s}=this;document.removeEventListener("mousemove",s),document.removeEventListener("touchmove",s),document.removeEventListener("mouseup",n),document.removeEventListener("touchend",n),this.sortedValues=t(e||this.options.values),this.options.onChange&&this.options.onChange(this),this.options.onDrag&&this.options.onDrag(this),this.activeHandleIndex=void 0,this.tempValues=void 0,this.options.rerender()},{handleDrag:i}=this;document.addEventListener("mousemove",i),document.addEventListener("touchmove",i),document.addEventListener("mouseup",n),document.addEventListener("touchend",n)};getPercentageForValue=e=>this.options.interpolator.getPercentageForValue(e,this.options.min,this.options.max);getTicks=()=>{let e=[];if(this.options.ticks)e=[...this.options.ticks];else if("steps"in this.options)e=[...this.options.steps];else{for(e=[this.options.min];e[e.length-1]<this.options.max-this.options.tickSize;)e.push(e[e.length-1]+this.options.tickSize);e.push(this.options.max)}return e.map(((e,t)=>({value:e,key:t,percentage:this.getPercentageForValue(e)})))};getSteps=()=>{const e=t(this.tempValues||this.options.values);return[...e,this.options.max].map(((t,s)=>{const n=e[s-1],i=void 0!==n?n:this.options.min,o=this.getPercentageForValue(i);return{left:o,width:this.getPercentageForValue(t)-o}}))};handles=()=>(this.tempValues||this.options.values).map(((e,t)=>({value:e,isActive:t===this.activeHandleIndex,onKeyDownHandler:e=>{this.handleKeyDown(e,t)},onMouseDownHandler:e=>{this.handlePress(e,t)},onTouchStart:e=>{this.handlePress(e,t)}})))},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=index.production.js.map
